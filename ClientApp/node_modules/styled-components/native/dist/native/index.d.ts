import { Styled } from '../constructors/constructWithOptions';
import css from '../constructors/css';
import withTheme from '../hoc/withTheme';
import ThemeProvider, { ThemeConsumer, ThemeContext, useTheme } from '../models/ThemeProvider';
import { AnyStyledComponent, NativeTarget, StyledComponentInnerAttrs, StyledComponentInnerComponent, StyledComponentInnerOtherProps } from '../types';
import isStyledComponent from '../utils/isStyledComponent';
declare function createStyle<Target extends AnyStyledComponent<'native'>>(tag: Target): Styled<'native', StyledComponentInnerComponent<'native', Target>, StyledComponentInnerOtherProps<'native', Target>, StyledComponentInnerAttrs<'native', Target>>;
declare function createStyle<Target extends NativeTarget>(tag: Target): Styled<'native', Target, {}>;
declare const styled: typeof createStyle & {
    ActivityIndicator: Styled<"native", typeof import("react-native").ActivityIndicator, {}, never, {}>;
    Button: Styled<"native", typeof import("react-native").Button, {}, never, {}>;
    DatePickerIOS: Styled<"native", typeof import("react-native").DatePickerIOS, {}, never, {}>;
    DrawerLayoutAndroid: Styled<"native", typeof import("react-native").DrawerLayoutAndroid, {}, never, {}>;
    FlatList: Styled<"native", typeof import("react-native").FlatList, {}, never, {}>;
    Image: Styled<"native", typeof import("react-native").Image, {}, never, {}>;
    ImageBackground: Styled<"native", typeof import("react-native").ImageBackground, {}, never, {}>;
    KeyboardAvoidingView: Styled<"native", typeof import("react-native").KeyboardAvoidingView, {}, never, {}>;
    Modal: Styled<"native", typeof import("react-native").Modal, {}, never, {}>;
    Pressable: Styled<"native", import("react").ForwardRefExoticComponent<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>, {}, never, {}>;
    ProgressBarAndroid: Styled<"native", typeof import("react-native").ProgressBarAndroid, {}, never, {}>;
    ProgressViewIOS: Styled<"native", typeof import("react-native").ProgressViewIOS, {}, never, {}>;
    RefreshControl: Styled<"native", typeof import("react-native").RefreshControl, {}, never, {}>;
    SafeAreaView: Styled<"native", typeof import("react-native").SafeAreaView, {}, never, {}>;
    ScrollView: Styled<"native", typeof import("react-native").ScrollView, {}, never, {}>;
    SectionList: Styled<"native", typeof import("react-native").SectionList, {}, never, {}>;
    Slider: Styled<"native", typeof import("react-native").Slider, {}, never, {}>;
    Switch: Styled<"native", typeof import("react-native").Switch, {}, never, {}>;
    Text: Styled<"native", typeof import("react-native").Text, {}, never, {}>;
    TextInput: Styled<"native", typeof import("react-native").TextInput, {}, never, {}>;
    TouchableHighlight: Styled<"native", typeof import("react-native").TouchableHighlight, {}, never, {}>;
    TouchableOpacity: Styled<"native", typeof import("react-native").TouchableOpacity, {}, never, {}>;
    View: Styled<"native", typeof import("react-native").View, {}, never, {}>;
    VirtualizedList: Styled<"native", typeof import("react-native").VirtualizedList, {}, never, {}>;
};
export { DefaultTheme, ExecutionContext, ExecutionProps, IStyledComponent, IStyledComponentFactory, IStyledStatics, NativeTarget, Runtime, StyledObject, StyledOptions, } from '../types';
export { css, isStyledComponent, ThemeProvider, ThemeConsumer, ThemeContext, withTheme, useTheme };
export { styled, styled as default };
