export declare const seedNextClassnames: (names: string[]) => string[];
export declare const resetStyled: (isServer?: boolean) => {
    <Target extends import("../types").AnyStyledComponent<"web">>(tag: Target): import("../constructors/constructWithOptions").Styled<"web", import("../types").StyledComponentInnerComponent<"web", Target>, import("../types").StyledComponentInnerOtherProps<"web", Target>, import("../types").StyledComponentInnerAttrs<"web", Target>, {}>;
    <Target_1 extends import("..").WebTarget>(tag: Target_1): import("../constructors/constructWithOptions").Styled<"web", Target_1, {}, never, {}>;
} & {
    a: import("../constructors/constructWithOptions").Styled<"web", "a", {}, never, {}>;
    abbr: import("../constructors/constructWithOptions").Styled<"web", "abbr", {}, never, {}>;
    address: import("../constructors/constructWithOptions").Styled<"web", "address", {}, never, {}>;
    area: import("../constructors/constructWithOptions").Styled<"web", "area", {}, never, {}>;
    article: import("../constructors/constructWithOptions").Styled<"web", "article", {}, never, {}>;
    aside: import("../constructors/constructWithOptions").Styled<"web", "aside", {}, never, {}>;
    audio: import("../constructors/constructWithOptions").Styled<"web", "audio", {}, never, {}>;
    b: import("../constructors/constructWithOptions").Styled<"web", "b", {}, never, {}>;
    base: import("../constructors/constructWithOptions").Styled<"web", "base", {}, never, {}>;
    bdi: import("../constructors/constructWithOptions").Styled<"web", "bdi", {}, never, {}>;
    bdo: import("../constructors/constructWithOptions").Styled<"web", "bdo", {}, never, {}>;
    big: import("../constructors/constructWithOptions").Styled<"web", "big", {}, never, {}>;
    blockquote: import("../constructors/constructWithOptions").Styled<"web", "blockquote", {}, never, {}>;
    body: import("../constructors/constructWithOptions").Styled<"web", "body", {}, never, {}>;
    br: import("../constructors/constructWithOptions").Styled<"web", "br", {}, never, {}>;
    button: import("../constructors/constructWithOptions").Styled<"web", "button", {}, never, {}>;
    canvas: import("../constructors/constructWithOptions").Styled<"web", "canvas", {}, never, {}>;
    caption: import("../constructors/constructWithOptions").Styled<"web", "caption", {}, never, {}>;
    cite: import("../constructors/constructWithOptions").Styled<"web", "cite", {}, never, {}>;
    code: import("../constructors/constructWithOptions").Styled<"web", "code", {}, never, {}>;
    col: import("../constructors/constructWithOptions").Styled<"web", "col", {}, never, {}>;
    colgroup: import("../constructors/constructWithOptions").Styled<"web", "colgroup", {}, never, {}>;
    data: import("../constructors/constructWithOptions").Styled<"web", "data", {}, never, {}>;
    datalist: import("../constructors/constructWithOptions").Styled<"web", "datalist", {}, never, {}>;
    dd: import("../constructors/constructWithOptions").Styled<"web", "dd", {}, never, {}>;
    del: import("../constructors/constructWithOptions").Styled<"web", "del", {}, never, {}>;
    details: import("../constructors/constructWithOptions").Styled<"web", "details", {}, never, {}>;
    dfn: import("../constructors/constructWithOptions").Styled<"web", "dfn", {}, never, {}>;
    dialog: import("../constructors/constructWithOptions").Styled<"web", "dialog", {}, never, {}>;
    div: import("../constructors/constructWithOptions").Styled<"web", "div", {}, never, {}>;
    dl: import("../constructors/constructWithOptions").Styled<"web", "dl", {}, never, {}>;
    dt: import("../constructors/constructWithOptions").Styled<"web", "dt", {}, never, {}>;
    em: import("../constructors/constructWithOptions").Styled<"web", "em", {}, never, {}>;
    embed: import("../constructors/constructWithOptions").Styled<"web", "embed", {}, never, {}>;
    fieldset: import("../constructors/constructWithOptions").Styled<"web", "fieldset", {}, never, {}>;
    figcaption: import("../constructors/constructWithOptions").Styled<"web", "figcaption", {}, never, {}>;
    figure: import("../constructors/constructWithOptions").Styled<"web", "figure", {}, never, {}>;
    footer: import("../constructors/constructWithOptions").Styled<"web", "footer", {}, never, {}>;
    form: import("../constructors/constructWithOptions").Styled<"web", "form", {}, never, {}>;
    h1: import("../constructors/constructWithOptions").Styled<"web", "h1", {}, never, {}>;
    h2: import("../constructors/constructWithOptions").Styled<"web", "h2", {}, never, {}>;
    h3: import("../constructors/constructWithOptions").Styled<"web", "h3", {}, never, {}>;
    h4: import("../constructors/constructWithOptions").Styled<"web", "h4", {}, never, {}>;
    h5: import("../constructors/constructWithOptions").Styled<"web", "h5", {}, never, {}>;
    h6: import("../constructors/constructWithOptions").Styled<"web", "h6", {}, never, {}>;
    head: import("../constructors/constructWithOptions").Styled<"web", "head", {}, never, {}>;
    header: import("../constructors/constructWithOptions").Styled<"web", "header", {}, never, {}>;
    hgroup: import("../constructors/constructWithOptions").Styled<"web", "hgroup", {}, never, {}>;
    hr: import("../constructors/constructWithOptions").Styled<"web", "hr", {}, never, {}>;
    html: import("../constructors/constructWithOptions").Styled<"web", "html", {}, never, {}>;
    i: import("../constructors/constructWithOptions").Styled<"web", "i", {}, never, {}>;
    iframe: import("../constructors/constructWithOptions").Styled<"web", "iframe", {}, never, {}>;
    img: import("../constructors/constructWithOptions").Styled<"web", "img", {}, never, {}>;
    input: import("../constructors/constructWithOptions").Styled<"web", "input", {}, never, {}>;
    ins: import("../constructors/constructWithOptions").Styled<"web", "ins", {}, never, {}>;
    kbd: import("../constructors/constructWithOptions").Styled<"web", "kbd", {}, never, {}>;
    keygen: import("../constructors/constructWithOptions").Styled<"web", "keygen", {}, never, {}>;
    label: import("../constructors/constructWithOptions").Styled<"web", "label", {}, never, {}>;
    legend: import("../constructors/constructWithOptions").Styled<"web", "legend", {}, never, {}>;
    li: import("../constructors/constructWithOptions").Styled<"web", "li", {}, never, {}>;
    link: import("../constructors/constructWithOptions").Styled<"web", "link", {}, never, {}>;
    main: import("../constructors/constructWithOptions").Styled<"web", "main", {}, never, {}>;
    map: import("../constructors/constructWithOptions").Styled<"web", "map", {}, never, {}>;
    mark: import("../constructors/constructWithOptions").Styled<"web", "mark", {}, never, {}>;
    menu: import("../constructors/constructWithOptions").Styled<"web", "menu", {}, never, {}>;
    menuitem: import("../constructors/constructWithOptions").Styled<"web", "menuitem", {}, never, {}>;
    meta: import("../constructors/constructWithOptions").Styled<"web", "meta", {}, never, {}>;
    meter: import("../constructors/constructWithOptions").Styled<"web", "meter", {}, never, {}>;
    nav: import("../constructors/constructWithOptions").Styled<"web", "nav", {}, never, {}>;
    noindex: import("../constructors/constructWithOptions").Styled<"web", "noindex", {}, never, {}>;
    noscript: import("../constructors/constructWithOptions").Styled<"web", "noscript", {}, never, {}>;
    object: import("../constructors/constructWithOptions").Styled<"web", "object", {}, never, {}>;
    ol: import("../constructors/constructWithOptions").Styled<"web", "ol", {}, never, {}>;
    optgroup: import("../constructors/constructWithOptions").Styled<"web", "optgroup", {}, never, {}>;
    option: import("../constructors/constructWithOptions").Styled<"web", "option", {}, never, {}>;
    output: import("../constructors/constructWithOptions").Styled<"web", "output", {}, never, {}>;
    p: import("../constructors/constructWithOptions").Styled<"web", "p", {}, never, {}>;
    param: import("../constructors/constructWithOptions").Styled<"web", "param", {}, never, {}>;
    picture: import("../constructors/constructWithOptions").Styled<"web", "picture", {}, never, {}>;
    pre: import("../constructors/constructWithOptions").Styled<"web", "pre", {}, never, {}>;
    progress: import("../constructors/constructWithOptions").Styled<"web", "progress", {}, never, {}>;
    q: import("../constructors/constructWithOptions").Styled<"web", "q", {}, never, {}>;
    rp: import("../constructors/constructWithOptions").Styled<"web", "rp", {}, never, {}>;
    rt: import("../constructors/constructWithOptions").Styled<"web", "rt", {}, never, {}>;
    ruby: import("../constructors/constructWithOptions").Styled<"web", "ruby", {}, never, {}>;
    s: import("../constructors/constructWithOptions").Styled<"web", "s", {}, never, {}>;
    samp: import("../constructors/constructWithOptions").Styled<"web", "samp", {}, never, {}>;
    slot: import("../constructors/constructWithOptions").Styled<"web", "slot", {}, never, {}>;
    script: import("../constructors/constructWithOptions").Styled<"web", "script", {}, never, {}>;
    section: import("../constructors/constructWithOptions").Styled<"web", "section", {}, never, {}>;
    select: import("../constructors/constructWithOptions").Styled<"web", "select", {}, never, {}>;
    small: import("../constructors/constructWithOptions").Styled<"web", "small", {}, never, {}>;
    source: import("../constructors/constructWithOptions").Styled<"web", "source", {}, never, {}>;
    span: import("../constructors/constructWithOptions").Styled<"web", "span", {}, never, {}>;
    strong: import("../constructors/constructWithOptions").Styled<"web", "strong", {}, never, {}>;
    style: import("../constructors/constructWithOptions").Styled<"web", "style", {}, never, {}>;
    sub: import("../constructors/constructWithOptions").Styled<"web", "sub", {}, never, {}>;
    summary: import("../constructors/constructWithOptions").Styled<"web", "summary", {}, never, {}>;
    sup: import("../constructors/constructWithOptions").Styled<"web", "sup", {}, never, {}>;
    table: import("../constructors/constructWithOptions").Styled<"web", "table", {}, never, {}>;
    template: import("../constructors/constructWithOptions").Styled<"web", "template", {}, never, {}>;
    tbody: import("../constructors/constructWithOptions").Styled<"web", "tbody", {}, never, {}>;
    td: import("../constructors/constructWithOptions").Styled<"web", "td", {}, never, {}>;
    textarea: import("../constructors/constructWithOptions").Styled<"web", "textarea", {}, never, {}>;
    tfoot: import("../constructors/constructWithOptions").Styled<"web", "tfoot", {}, never, {}>;
    th: import("../constructors/constructWithOptions").Styled<"web", "th", {}, never, {}>;
    thead: import("../constructors/constructWithOptions").Styled<"web", "thead", {}, never, {}>;
    time: import("../constructors/constructWithOptions").Styled<"web", "time", {}, never, {}>;
    title: import("../constructors/constructWithOptions").Styled<"web", "title", {}, never, {}>;
    tr: import("../constructors/constructWithOptions").Styled<"web", "tr", {}, never, {}>;
    track: import("../constructors/constructWithOptions").Styled<"web", "track", {}, never, {}>;
    u: import("../constructors/constructWithOptions").Styled<"web", "u", {}, never, {}>;
    ul: import("../constructors/constructWithOptions").Styled<"web", "ul", {}, never, {}>;
    var: import("../constructors/constructWithOptions").Styled<"web", "var", {}, never, {}>;
    video: import("../constructors/constructWithOptions").Styled<"web", "video", {}, never, {}>;
    wbr: import("../constructors/constructWithOptions").Styled<"web", "wbr", {}, never, {}>;
    webview: import("../constructors/constructWithOptions").Styled<"web", "webview", {}, never, {}>;
    svg: import("../constructors/constructWithOptions").Styled<"web", "svg", {}, never, {}>;
    animate: import("../constructors/constructWithOptions").Styled<"web", "animate", {}, never, {}>;
    animateMotion: import("../constructors/constructWithOptions").Styled<"web", "animateMotion", {}, never, {}>;
    animateTransform: import("../constructors/constructWithOptions").Styled<"web", "animateTransform", {}, never, {}>;
    circle: import("../constructors/constructWithOptions").Styled<"web", "circle", {}, never, {}>;
    clipPath: import("../constructors/constructWithOptions").Styled<"web", "clipPath", {}, never, {}>;
    defs: import("../constructors/constructWithOptions").Styled<"web", "defs", {}, never, {}>;
    desc: import("../constructors/constructWithOptions").Styled<"web", "desc", {}, never, {}>;
    ellipse: import("../constructors/constructWithOptions").Styled<"web", "ellipse", {}, never, {}>;
    feBlend: import("../constructors/constructWithOptions").Styled<"web", "feBlend", {}, never, {}>;
    feColorMatrix: import("../constructors/constructWithOptions").Styled<"web", "feColorMatrix", {}, never, {}>;
    feComponentTransfer: import("../constructors/constructWithOptions").Styled<"web", "feComponentTransfer", {}, never, {}>;
    feComposite: import("../constructors/constructWithOptions").Styled<"web", "feComposite", {}, never, {}>;
    feConvolveMatrix: import("../constructors/constructWithOptions").Styled<"web", "feConvolveMatrix", {}, never, {}>;
    feDiffuseLighting: import("../constructors/constructWithOptions").Styled<"web", "feDiffuseLighting", {}, never, {}>;
    feDisplacementMap: import("../constructors/constructWithOptions").Styled<"web", "feDisplacementMap", {}, never, {}>;
    feDistantLight: import("../constructors/constructWithOptions").Styled<"web", "feDistantLight", {}, never, {}>;
    feDropShadow: import("../constructors/constructWithOptions").Styled<"web", "feDropShadow", {}, never, {}>;
    feFlood: import("../constructors/constructWithOptions").Styled<"web", "feFlood", {}, never, {}>;
    feFuncA: import("../constructors/constructWithOptions").Styled<"web", "feFuncA", {}, never, {}>;
    feFuncB: import("../constructors/constructWithOptions").Styled<"web", "feFuncB", {}, never, {}>;
    feFuncG: import("../constructors/constructWithOptions").Styled<"web", "feFuncG", {}, never, {}>;
    feFuncR: import("../constructors/constructWithOptions").Styled<"web", "feFuncR", {}, never, {}>;
    feGaussianBlur: import("../constructors/constructWithOptions").Styled<"web", "feGaussianBlur", {}, never, {}>;
    feImage: import("../constructors/constructWithOptions").Styled<"web", "feImage", {}, never, {}>;
    feMerge: import("../constructors/constructWithOptions").Styled<"web", "feMerge", {}, never, {}>;
    feMergeNode: import("../constructors/constructWithOptions").Styled<"web", "feMergeNode", {}, never, {}>;
    feMorphology: import("../constructors/constructWithOptions").Styled<"web", "feMorphology", {}, never, {}>;
    feOffset: import("../constructors/constructWithOptions").Styled<"web", "feOffset", {}, never, {}>;
    fePointLight: import("../constructors/constructWithOptions").Styled<"web", "fePointLight", {}, never, {}>;
    feSpecularLighting: import("../constructors/constructWithOptions").Styled<"web", "feSpecularLighting", {}, never, {}>;
    feSpotLight: import("../constructors/constructWithOptions").Styled<"web", "feSpotLight", {}, never, {}>;
    feTile: import("../constructors/constructWithOptions").Styled<"web", "feTile", {}, never, {}>;
    feTurbulence: import("../constructors/constructWithOptions").Styled<"web", "feTurbulence", {}, never, {}>;
    filter: import("../constructors/constructWithOptions").Styled<"web", "filter", {}, never, {}>;
    foreignObject: import("../constructors/constructWithOptions").Styled<"web", "foreignObject", {}, never, {}>;
    g: import("../constructors/constructWithOptions").Styled<"web", "g", {}, never, {}>;
    image: import("../constructors/constructWithOptions").Styled<"web", "image", {}, never, {}>;
    line: import("../constructors/constructWithOptions").Styled<"web", "line", {}, never, {}>;
    linearGradient: import("../constructors/constructWithOptions").Styled<"web", "linearGradient", {}, never, {}>;
    marker: import("../constructors/constructWithOptions").Styled<"web", "marker", {}, never, {}>;
    mask: import("../constructors/constructWithOptions").Styled<"web", "mask", {}, never, {}>;
    metadata: import("../constructors/constructWithOptions").Styled<"web", "metadata", {}, never, {}>;
    mpath: import("../constructors/constructWithOptions").Styled<"web", "mpath", {}, never, {}>;
    path: import("../constructors/constructWithOptions").Styled<"web", "path", {}, never, {}>;
    pattern: import("../constructors/constructWithOptions").Styled<"web", "pattern", {}, never, {}>;
    polygon: import("../constructors/constructWithOptions").Styled<"web", "polygon", {}, never, {}>;
    polyline: import("../constructors/constructWithOptions").Styled<"web", "polyline", {}, never, {}>;
    radialGradient: import("../constructors/constructWithOptions").Styled<"web", "radialGradient", {}, never, {}>;
    rect: import("../constructors/constructWithOptions").Styled<"web", "rect", {}, never, {}>;
    stop: import("../constructors/constructWithOptions").Styled<"web", "stop", {}, never, {}>;
    switch: import("../constructors/constructWithOptions").Styled<"web", "switch", {}, never, {}>;
    symbol: import("../constructors/constructWithOptions").Styled<"web", "symbol", {}, never, {}>;
    text: import("../constructors/constructWithOptions").Styled<"web", "text", {}, never, {}>;
    textPath: import("../constructors/constructWithOptions").Styled<"web", "textPath", {}, never, {}>;
    tspan: import("../constructors/constructWithOptions").Styled<"web", "tspan", {}, never, {}>;
    use: import("../constructors/constructWithOptions").Styled<"web", "use", {}, never, {}>;
    view: import("../constructors/constructWithOptions").Styled<"web", "view", {}, never, {}>;
};
export declare const rehydrateTestStyles: () => void;
export declare const stripComments: (str: string) => string;
export declare const stripWhitespace: (str: string) => string;
export declare const getCSS: (scope: Document | HTMLElement) => string;
export declare const expectCSSMatches: (_expectation: string, opts?: {
    ignoreWhitespace: boolean;
}) => string;
export declare const getRenderedCSS: () => string;
